name: Build

on:
  push:
    branches:
      - "master"

jobs:
  buildlinux:
    name: Linux x64
    runs-on: ubuntu-20.04

    steps:
      - name: Prepare Environment
        run: |
            sudo apt-get install libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-randr0 libxkbcommon-x11-0

      - name: Prepare Qt Libraries
        uses: jurplel/install-qt-action@v3

      - name: Clone
        uses: actions/checkout@v3

      - name: Compile
        run: |
          qmake CONFIG+=release PREFIX=/usr SerialViewer.pro
          make -j`grep -c ^processor /proc/cpuinfo`

      - name: Package
        run: |
          make INSTALL_ROOT=appdir install
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/SerialViewer.desktop -appimage -extra-plugins=iconengines,platformthemes/libqgtk3.so

      - uses: actions/upload-artifact@v3
        with:
          name: SerialViewer-Linux_x64.AppImage
          path: SerialViewer-*x86_64.AppImage

  buildmacos:
    name: macOS x64
    runs-on: macos-12

    steps:
      - name: Prepare macOS Environment
        run: |
            brew install qt5
            brew link qt5 --force

      - name: Clone
        uses: actions/checkout@v3

      - name: Compile
        run: |
          qmake CONFIG+=release CONFIG+=sdk_no_version_check SerialViewer.pro
          make -j`sysctl kern.aioprocmax | awk '{print $2}'`

      - name: Package
        run: |
          macdeployqt SerialViewer.app -dmg

      - uses: actions/upload-artifact@v3
        with:
          name: SerialViewer-macOS_x64.dmg
          path: SerialViewer.dmg

  buildwindows:
    name: Windows x64
    runs-on: windows-2019

    steps:
      - name: Prepare Qt Libraries
        uses: jurplel/install-qt-action@v3

      - name: Clone
        uses: actions/checkout@v3

      - name: Compile
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

          qmake CONFIG+=release SerialViewer.pro
          nmake /C

      - name: Package
        run: |
          mkdir package
          copy "release/SerialViewer.exe" package/
          copy "${Env:Qt5_Dir}/bin/Qt5Core.dll" package/
          copy "${Env:Qt5_Dir}/bin/Qt5Gui.dll" package/
          copy "${Env:Qt5_Dir}/bin/Qt5Network.dll" package/
          copy "${Env:Qt5_Dir}/bin/Qt5PrintSupport.dll" package/
          copy "${Env:Qt5_Dir}/bin/Qt5Qml.dll" package/
          copy "${Env:Qt5_Dir}/bin/Qt5SerialPort.dll" package/
          copy "${Env:Qt5_Dir}/bin/Qt5Widgets.dll" package/
          mkdir package/imageformats
          copy "${Env:Qt5_Dir}/plugins/imageformats/*.*" package/imageformats/
          mkdir package/platforms
          copy "${Env:Qt5_Dir}/plugins/platforms/*.*" package/platforms/
          mkdir package/styles
          copy "${Env:Qt5_Dir}/plugins/styles/*.*" package/styles/

      - uses: actions/upload-artifact@v3
        with:
          name: SerialViewer-Windows_x64
          path: package
 
  pre-release:
    name: "pre-release"
    runs-on: "ubuntu-latest"
    needs: [buildwindows, buildmacos, buildlinux]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: zip -r SerialViewer-Windows_x64_CIBuild.zip SerialViewer-Windows_x64
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "continuous"
          prerelease: false
          title: "Automatic Build"
          files: |
            SerialViewer-Linux_x64.AppImage/SerialViewer-*x86_64.AppImage
            SerialViewer-Windows_x64_CIBuild.zip
            SerialViewer-macOS_x64.dmg/SerialViewer.dmg

